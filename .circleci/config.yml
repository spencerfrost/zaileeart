version: 2.1
setup: true
orbs:
  path-filtering: circleci/path-filtering@1.1.0

parameters:
  run-frontend-workflow:
    type: boolean
    default: false
  run-backend-workflow:
    type: boolean
    default: false

jobs:
  build-frontend:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-frontend-{{ checksum "apps/frontend/pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-9 --activate
            pnpm config set store-dir .pnpm-store
      - run:
          name: Install Frontend Dependencies
          command: |
            cd apps/frontend
            pnpm install
      - run:
          name: Build Frontend
          command: |
            cd apps/frontend
            pnpm run build
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-frontend-{{ checksum "apps/frontend/pnpm-lock.yaml" }}
          paths:
            - .pnpm-store
      - persist_to_workspace:
          root: .
          paths:
            - apps/frontend/.output

  build-backend:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-backend-{{ checksum "apps/backend/pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-9 --activate
            pnpm config set store-dir .pnpm-store
      - run:
          name: Install Backend Dependencies
          command: |
            cd apps/backend
            pnpm install
      - run:
          name: Build Backend
          command: |
            cd apps/backend
            pnpm run build
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-backend-{{ checksum "apps/backend/pnpm-lock.yaml" }}
          paths:
            - .pnpm-store
      - persist_to_workspace:
          root: .
          paths:
            - apps/backend/dist
            - apps/backend/package.json
            - apps/backend/pnpm-lock.yaml

  deploy:
    machine:
      image: ubuntu-2204:current
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Install rsync
          command: |
            sudo apt-get update
            sudo apt-get install -y rsync
      - run:
          name: Deploy to Server
          command: |
            rsync -avzc --delete /home/circleci/project/apps/frontend/.output/ $SERVER_USER@$SERVER_IP:/var/www/zaileeart/frontend/
            rsync -avzc --delete /home/circleci/project/apps/backend/dist/ $SERVER_USER@$SERVER_IP:/var/www/zaileeart/backend/
            rsync -avzc /home/circleci/project/apps/backend/package.json /home/circleci/project/pnpm-lock.yaml $SERVER_USER@$SERVER_IP:/var/www/zaileeart/backend/
            ssh $SERVER_USER@$SERVER_IP 'bash -l -c "cd /var/www/zaileeart/backend && command -v pnpm >/dev/null 2>&1 && pnpm install --prod || npm install --production && pm2 restart zaileeart-backend && sudo systemctl restart nginx"'

workflows:
  check-updated-files:
    jobs:
      - path-filtering/filter:
          name: check-updated-files
          mapping: |
            apps/frontend/.* run-frontend-workflow true
            apps/backend/.* run-backend-workflow true
          base-revision: master
          config-path: .circleci/continue-config.yml

  # The following workflows will be executed in parallel if the corresponding flags are set
  frontend-workflow:
    when: << pipeline.parameters.run-frontend-workflow >>
    jobs:
      - build-frontend
      - deploy:
          requires:
            - build-frontend
          filters:
            branches:
              only: master

  backend-workflow:
    when: << pipeline.parameters.run-backend-workflow >>
    jobs:
      - build-backend
      - deploy:
          requires:
            - build-backend
          filters:
            branches:
              only: master